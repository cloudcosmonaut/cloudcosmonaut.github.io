<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud Cosmonaut</title><link>https://cloudcosmonaut.io/</link><description>Recent content on Cloud Cosmonaut</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Hindrik Bruinsma &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Fri, 27 May 2022 12:00:01 +0200</lastBuildDate><atom:link href="https://cloudcosmonaut.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Secure key management for modern developers</title><link>https://cloudcosmonaut.io/posts/2022/05/secure_keymanagement_for_modern_developers/</link><pubDate>Fri, 27 May 2022 12:00:01 +0200</pubDate><guid>https://cloudcosmonaut.io/posts/2022/05/secure_keymanagement_for_modern_developers/</guid><description>When we talk about password, most people use a password manager and no longer use the same password for multiple accounts. But I notice, that a lot of people share there SSH key with multiple accounts and don&amp;rsquo;t even protect them with a passphrase.
What do we need? Similar to keys to your house keys, you want seperate keys for the different persona&amp;rsquo;s you imporsonate or roles you have. E.g. for your home projects, your work projects, and client projects.</description></item><item><title>Weekly update runner toolchain</title><link>https://cloudcosmonaut.io/posts/2021/12/weekly-update-runner-toolchain/</link><pubDate>Thu, 30 Dec 2021 09:00:01 +0200</pubDate><guid>https://cloudcosmonaut.io/posts/2021/12/weekly-update-runner-toolchain/</guid><description>When using GitHub Enterprise Server in a large organization, you might run into problems due to limited or no internet connection. Or you might have set-up your runners to be detroyed everytime a workflow is triggered. In either case, you can speed up the workflow by using cached versions of tools the workflow need. Node, go, python, etc. These tools are setup with actions/node-setup@v2 or similar step.
The general idea is that you run actions/node-setup@v2 with every version you need and then create a tarball of the runnner.</description></item><item><title>About</title><link>https://cloudcosmonaut.io/about/</link><pubDate>Tue, 13 Apr 2021 10:37:58 +0200</pubDate><guid>https://cloudcosmonaut.io/about/</guid><description>Hey, hello ðŸ‘‹ my name is Hindrik Bruinsma and I work as a GitHub Consultant at Xpirit. With my broad technical background, I help companies adopt DevOps with a focus on using GitHub.</description></item><item><title>Run unit tests for every Pull Request with GitHub Actions</title><link>https://cloudcosmonaut.io/posts/2021/04/run-unit-tests-for-every-pull-request-with-github-actions/</link><pubDate>Mon, 12 Apr 2021 09:00:00 +0200</pubDate><guid>https://cloudcosmonaut.io/posts/2021/04/run-unit-tests-for-every-pull-request-with-github-actions/</guid><description>Testing early and often in your software development cycle is a major part of the DevOps philosophy. With GitHub actions, you can run your test on every Pull Request (PR). Testing as early as possible will detect errors in an early stage so errors can be fixed before releasing.
What are GitHub Actions? You might know GitHub as the open source developers platform. GitHub now contains GitHub Actions. You can compare Github Actions with an Azure Devops Pipeline or an AWS CodePipeline.</description></item></channel></rss>